{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"label\", null, _toDisplayString(_ctx.$event.target.value), 1 /* TEXT */), _createElementVNode(\"input\", {\n    value: _ctx.value,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('input', $event.target.value)),\n    type: \"text\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","_ctx","$event","target","value","onInput","_cache","$emit","type"],"sources":["C:\\Users\\Acer\\Documents\\Misa\\tuan 1\\web202307\\mf1731-ltlam\\vue\\misa-web7-vue\\src\\components\\base\\MisaInput.vue"],"sourcesContent":["<template>\r\n  <label>{{ $event.target.value }}</label>\r\n  <input\r\n    v-bind:value=\"value\"\r\n    v-on:input=\"$emit('input', $event.target.value)\"\r\n    type=\"text\"\r\n  />\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"MisaInput\",\r\n  props: [\"value\"],\r\n  watch: {\r\n    value() {\r\n      this.emitValueChanged();\r\n    }\r\n  }\r\n  methods: {\r\n    emitValueChanged() {\r\n      this.$emit(\"input-value-changed\", this.value);\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {};\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";;;6DACEA,mBAAA,CAAwC,eAAAC,gBAAA,CAA9BC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,KAAK,kBAC7BL,mBAAA,CAIE;IAHOK,KAAK,EAAEH,IAAA,CAAAG,KAAK;IACdC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAJ,MAAA,IAAED,IAAA,CAAAM,KAAK,UAAUL,MAAM,CAACC,MAAM,CAACC,KAAK;IAC9CI,IAAI,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}