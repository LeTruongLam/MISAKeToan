{"ast":null,"code":"import EmployeeDetail from \"./EmployeeDetail.vue\";\nexport default {\n  name: \"TheEmployeeList\",\n  props: [\"\"],\n  components: {\n    EmployeeDetail\n  },\n  created() {\n    // Đăng ký sự kiện \"onClose\" và gán hàm xử lý onCloseEmployeeDetail\n    this.$emitter.on(\"onClose\", this.onCloseEmployeeDetail);\n    // Lấy dữ liệu từ API\n    this.$axios.get(\"https://cukcuk.manhnv.net/api/v1/customers\").then(response => {\n      this.customers = response.data;\n      console.log(\"Lấy dữ liệu thành công\");\n    }).catch(error => {\n      console.log(\"Lấy dữ liệu thất bại\");\n      console.error(error);\n    });\n  },\n  computed: {\n    // Trả về số checkbox đã được chọn\n    selectedCount() {\n      return this.selectedtableDatas.length;\n    }\n  },\n  methods: {\n    // Xử lý hiển thị và ẩn loading khi lấy dữ liệu\n    handleLoading() {\n      this.showLoading = true; // Hiển thị loading\n      // Đặt thời gian chờ 1 giây rồi ẩn loading\n      setTimeout(() => {\n        this.showLoading = false; // Ẩn loading sau 1 giây\n      }, 1000);\n      this.fetchData(); // Gọi phương thức fetchData để lấy dữ liệu\n    },\n\n    // Lấy dữ liệu từ API\n    fetchData() {\n      // Gọi API để lấy dữ liệu khách hàng\n      fetch(\"https://cukcuk.manhnv.net/api/v1/customers\").then(res => res.json()).then(data => {\n        this.customers = data;\n        console.log(\"Lấy dữ liệu thành công\");\n      }).catch(error => {\n        console.log(\"Lấy dữ liệu thất bại\");\n        console.error(error);\n      });\n    },\n    // Đóng form và thông báo Cất thành công\n    handleSaveSuccess() {\n      this.fetchData();\n      // Thực hiện đóng form\n      this.onCloseEmployeeDetail(); // Gọi phương thức để đóng form\n      // Hiển thị thông báo thành công\n      this.contentNotify = this.$MISAResource[\"VN\"].FormEdited; // Nội dung thông báo thành công\n      this.titleNotify = this.$MISAEnum[\"MISANotify\"].Success.title; // Tiêu đề thông báo thành công\n      this.iconNotify = this.$MISAEnum.MISANotify.Success.id; // ID của biểu tượng thông báo thành công\n      this.showNotify = true; // Hiển thị thông báo\n      setTimeout(() => {\n        this.showNotify = false; // Tự động ẩn thông báo sau 3 giây\n      }, 3000);\n    },\n    //\n    /**\r\n     * Xử lý sự kiện khi một mục menu ngữ cảnh được nhấp vào.\r\n     * @param {number} CustomerId - ID của khách hàng.\r\n     * @param {number} index - Chỉ số của mục menu được nhấp vào.\r\n     *  Created by Lê Trường Lam ngày 5/9\r\n     */\n    onContextMenuItemClick(CustomerId, index) {\n      const selectedMenuItem = this.customItems2[index];\n      if (selectedMenuItem === \"Xóa\") {\n        this.pickId(CustomerId);\n      } else {\n        console.log(selectedMenuItem);\n      }\n    },\n    /**\r\n     * Chọn nhân viên cần xóa dựa trên mã ID.\r\n     * @param {string} CustomerId - Mã ID của khách hàng.\r\n     *  Created by Lê Trường Lam ngày 5/9\r\n     */\n    pickId(CustomerId) {\n      const customer = this.customers.find(customer => customer.CustomerId === CustomerId);\n      if (customer) {\n        this.deleteData(CustomerId);\n        this.contentNotify = \"Đã xóa thành công\"; // Nội dung thông báo xóa thành công\n        this.titleNotify = this.$MISAEnum[\"MISANotify\"].Success.title; // Tiêu đề thông báo thành công\n        this.iconNotify = this.$MISAEnum[\"MISANotify\"].Success.id; // ID của biểu tượng thông báo thành công\n        this.showNotify = true; // Hiển thị thông báo\n        setTimeout(() => {\n          this.showNotify = false;\n        }, 3000);\n      } else {\n        console.log(\"Không tìm thấy khách hàng với ID:\", CustomerId);\n      }\n    },\n    /**\r\n     * Xóa dữ liệu từ Id đã chọn\r\n     * @param {string} CustomerId - Mã ID của khách hàng.\r\n     *  Created by Lê Trường Lam ngày 5/9\r\n     */\n\n    deleteData(CustomerId) {\n      this.$axios.delete(`https://cukcuk.manhnv.net/api/v1/customers/${CustomerId}`).then(res => {\n        console.log(\"OK: \", res);\n        this.fetchData(); // Thực hiện gọi fetchData để lấy dữ liệu\n      }).catch(error => {\n        console.log(\"Lỗi khi xóa khách hàng:\", error);\n      });\n    },\n    // Mở form nhân viên\n    onShowEmployeeDetail() {\n      this.showEmployeeDetail = true;\n    },\n    // Đóng thông tin nhân viên\n\n    onCloseEmployeeDetail() {\n      this.showEmployeeDetail = false;\n    },\n    /**\r\n     * Chuyển đổi trạng thái hiển thị của combobox cho một mục tableData cụ thể.\r\n     * @param {number} CustomerId - Id của mục tableData.\r\n     */\n    toggleCombobox(CustomerId) {\n      // Lặp qua từng phần tử trong mảng customers\n      this.customers.forEach(customer => {\n        // Nếu Id của customer trùng với CustomerId đầu vào\n        if (customer.CustomerId === CustomerId) {\n          // Đảo ngược trạng thái showCombobox của customer\n          customer.showCombobox = !customer.showCombobox;\n        } else {\n          // Nếu không, đặt trạng thái showCombobox của customer thành false\n          customer.showCombobox = false;\n        }\n      });\n    },\n    // Hàm định dạng ngày tháng\n    formatDate(date) {\n      try {\n        // Chuyển đổi đối tượng date thành một đối tượng Date\n        date = new Date(date);\n        // Lấy giá trị ngày\n        let dateValue = date.getDate();\n        // Lấy giá trị tháng (cộng thêm 1 vì tháng trong JavaScript bắt đầu từ 0)\n        let monthValue = date.getMonth() + 1;\n        // Lấy giá trị năm\n        let year = date.getFullYear();\n        // Trả về chuỗi định dạng ngày/tháng/năm\n        return `${dateValue}/${monthValue}/${year}`;\n      } catch (error) {\n        // Xử lý lỗi nếu có\n        console.error(error);\n        // Trả về chuỗi rỗng nếu xảy ra lỗi\n        return \"\";\n      }\n    },\n    // Hiện Combobox\n    onShowCombobox() {\n      this.showCombobox = true;\n    },\n    // Đóng Combobox\n    onCloseCombobox() {\n      this.showCombobox = false;\n    },\n    // Hiện Contextmenu\n\n    onShowContextmenu() {\n      this.showContextMenu = true;\n    },\n    // Đóng Contextmenu\n\n    onCloseContextmenu() {\n      this.showContextMenu = false;\n    },\n    // Chọn hết checkbox trong bảng\n    selectAlltableDatas() {\n      if (this.allSelected) {\n        this.selectedtableDatas = this.customers.map(customer => customer.CustomerId);\n      } else {\n        this.selectedtableDatas = [];\n      }\n    },\n    // Cập nhật số checkbox đã chọn\n    updateSelectedCount() {\n      if (this.allSelected && this.selectedtableDatas.length !== this.customers.length) {\n        this.allSelected = false;\n      }\n      if (this.selectedtableDatas.length > 0) {\n        this.showSelected = true;\n      } else {\n        this.showSelected = false;\n      }\n    },\n    // Xóa tất cả\n    deleteAll() {\n      // Đặt lại selectedtableDatas về mảng rỗng\n      this.selectedtableDatas = [];\n      this.allSelected = false;\n    },\n    // Chọn tất cả\n    selectAll() {\n      this.allSelected = true;\n      // Đặt giá trị selectedtableDatas thành danh sách các id của tất cả các mục trong tableDatas\n      this.selectedtableDatas = this.customers.map(customer => customer.CustomerId);\n    }\n  },\n  data() {\n    return {\n      showLoading: false,\n      showNotify: false,\n      showCombobox: false,\n      showDialog: false,\n      showContextMenu: false,\n      showSelected: false,\n      customItems: [10, 20, 30, 40, 50],\n      // Mảng của combobox\n      customItems2: [\"Nhân bản\", \"Xóa\", \"Ngừng sử dụng\"],\n      // Mảng contextmenu\n      allSelected: false,\n      selectedtableDatas: [],\n      customers: [],\n      showEmployeeDetail: false\n    };\n  }\n};","map":{"version":3,"names":["EmployeeDetail","name","props","components","created","$emitter","on","onCloseEmployeeDetail","$axios","get","then","response","customers","data","console","log","catch","error","computed","selectedCount","selectedtableDatas","length","methods","handleLoading","showLoading","setTimeout","fetchData","fetch","res","json","handleSaveSuccess","contentNotify","$MISAResource","FormEdited","titleNotify","$MISAEnum","Success","title","iconNotify","MISANotify","id","showNotify","onContextMenuItemClick","CustomerId","index","selectedMenuItem","customItems2","pickId","customer","find","deleteData","delete","onShowEmployeeDetail","showEmployeeDetail","toggleCombobox","forEach","showCombobox","formatDate","date","Date","dateValue","getDate","monthValue","getMonth","year","getFullYear","onShowCombobox","onCloseCombobox","onShowContextmenu","showContextMenu","onCloseContextmenu","selectAlltableDatas","allSelected","map","updateSelectedCount","showSelected","deleteAll","selectAll","showDialog","customItems"],"sources":["C:\\Users\\Acer\\Documents\\Misa\\tuan 1\\web202307\\mf1731-ltlam\\vue\\misa-web7-vue\\src\\views\\employee\\EmployeeList.vue"],"sourcesContent":["<template>\r\n  <div class=\"header-wrapper\">\r\n    <h1 class=\"title-main\">Nhân viên</h1>\r\n    <a href=\"#\">\r\n      <m-button\r\n        content=\"Thêm mới nhân viên\"\r\n        @click=\"onShowEmployeeDetail\"\r\n      ></m-button>\r\n    </a>\r\n  </div>\r\n  <div class=\"container-content\">\r\n    <div class=\"header-container-content\">\r\n      <div class=\"first-left-content\">\r\n        Đã chọn: <span class=\"text-boil\">{{ selectedCount }}</span>\r\n\r\n        <a\r\n          href=\"#\"\r\n          v-if=\"showSelected\"\r\n          class=\"m-left-16 m-red-color m-a-style\"\r\n          @click=\"deleteAll\"\r\n          >Bỏ chọn</a\r\n        >\r\n        <a\r\n          href=\"#\"\r\n          v-if=\"showSelected\"\r\n          class=\"m-left-16 m-blue-color m-a-style\"\r\n          @click=\"selectAll\"\r\n          >Chọn tất cả\r\n        </a>\r\n        <a href=\"#\" class=\"delete-row\" v-if=\"showSelected\">\r\n          <p class=\"icon-delete\"></p>\r\n          <p class=\"\">Xóa</p>\r\n        </a>\r\n      </div>\r\n      <div class=\"right-left-content\">\r\n        <m-search content=\"Tìm theo mã, tên nhân viên\"></m-search>\r\n        <i class=\"excel-icon\"> </i>\r\n        <i class=\"reload-icon\" @click=\"handleLoading\"> </i>\r\n      </div>\r\n    </div>\r\n    <div class=\"table-content\">\r\n      <table class=\"employee-table\">\r\n        <thead>\r\n          <tr>\r\n            <th class=\"employee-table__header text-center size-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"myCheckbox\"\r\n                v-model=\"allSelected\"\r\n                @change=\"selectAlltableDatas\"\r\n              />\r\n            </th>\r\n            <th class=\"employee-table__header\">Mã nhân viên</th>\r\n            <th class=\"employee-table__header\">Tên nhân viên</th>\r\n            <th class=\"employee-table__header\">Giới tính</th>\r\n            <th class=\"employee-table__header text-center\">Ngày sinh</th>\r\n            <th class=\"employee-table__header\">\r\n              <label title=\"Số chứng minh nhân dân\">Số CMND</label>\r\n            </th>\r\n            <th class=\"employee-table__header\">Chức danh</th>\r\n            <th class=\"employee-table__header\">Tên đơn vị</th>\r\n            <th class=\"employee-table__header text-center\">Chức năng</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"customer in customers\" :key=\"customer.CustomerId\">\r\n            <td class=\"employee-table__data text-center size-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"myCheckbox\"\r\n                :value=\"customer.CustomerId\"\r\n                v-model=\"selectedtableDatas\"\r\n                @change=\"updateSelectedCount\"\r\n              />\r\n            </td>\r\n            <td class=\"employee-table__data\">{{ customer.CustomerCode }}</td>\r\n            <td class=\"employee-table__data\">{{ customer.FullName }}</td>\r\n            <td class=\"employee-table__data\">{{ customer.GenderName }}</td>\r\n            <td class=\"employee-table__data text-center\">\r\n              {{ formatDate(customer.CreatedDate) }}\r\n            </td>\r\n            <td class=\"employee-table__data\">{{ customer.PhoneNumber }}</td>\r\n            <td class=\"employee-table__data\">{{ customer.CompanyNames }}</td>\r\n            <td class=\"employee-table__data\">{{ customer.CompanyName }}</td>\r\n            <td class=\"employee-table__data text-center\">\r\n              <div class=\"edit\">\r\n                <a href=\"#\">Sửa</a>\r\n                <a\r\n                  href=\"#\"\r\n                  class=\"down-icon\"\r\n                  @click=\"toggleCombobox(customer.CustomerId)\"\r\n                >\r\n                  <m-contextmenu\r\n                    v-if=\"customer.showCombobox\"\r\n                    :menuItems=\"customItems2\"\r\n                    @onItemClick=\"\r\n                      onContextMenuItemClick(customer.CustomerId, $event)\r\n                    \"\r\n                    @onClose=\"onCloseContextmenu\"\r\n                  ></m-contextmenu>\r\n                </a>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div class=\"table-end\">\r\n      <div class=\"table-end-left\">\r\n        Tổng số <strong>{{ customers.length }}</strong> bản ghi\r\n      </div>\r\n      <div class=\"table-end-right\">\r\n        <div>Bản ghi / Trang</div>\r\n        <div class=\"search-bar\">\r\n          <input type=\"text\" placeholder=\"\" :value=\"customItems[0]\" />\r\n          <label\r\n            for=\"search-box\"\r\n            class=\"down-icon-black\"\r\n            @click=\"onShowCombobox\"\r\n          ></label>\r\n          <m-combobox\r\n            v-if=\"showCombobox\"\r\n            :items=\"customItems\"\r\n            @onClose=\"onCloseCombobox\"\r\n          ></m-combobox>\r\n        </div>\r\n\r\n        <div class=\"page-container\">\r\n          <a href=\"\" class=\"right-icon-black\"></a>\r\n          <a href=\"\" class=\"left-icon-black\"></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <m-loading v-if=\"showLoading\"></m-loading>\r\n  <EmployeeDetail\r\n    v-if=\"showEmployeeDetail\"\r\n    @saveSuccess=\"handleSaveSuccess\"\r\n  ></EmployeeDetail>\r\n  <m-notify\r\n    v-if=\"showNotify\"\r\n    :title=\"titleNotify\"\r\n    :type=\"iconNotify\"\r\n    :message=\"contentNotify\"\r\n  ></m-notify>\r\n</template>\r\n<script>\r\nimport EmployeeDetail from \"./EmployeeDetail.vue\";\r\nexport default {\r\n  name: \"TheEmployeeList\",\r\n  props: [\"\"],\r\n  components: {\r\n    EmployeeDetail,\r\n  },\r\n\r\n  created() {\r\n    // Đăng ký sự kiện \"onClose\" và gán hàm xử lý onCloseEmployeeDetail\r\n    this.$emitter.on(\"onClose\", this.onCloseEmployeeDetail);\r\n    // Lấy dữ liệu từ API\r\n    this.$axios\r\n      .get(\"https://cukcuk.manhnv.net/api/v1/customers\")\r\n      .then((response) => {\r\n        this.customers = response.data;\r\n        console.log(\"Lấy dữ liệu thành công\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Lấy dữ liệu thất bại\");\r\n        console.error(error);\r\n      });\r\n  },\r\n  computed: {\r\n    // Trả về số checkbox đã được chọn\r\n    selectedCount() {\r\n      return this.selectedtableDatas.length;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    // Xử lý hiển thị và ẩn loading khi lấy dữ liệu\r\n    handleLoading() {\r\n      this.showLoading = true; // Hiển thị loading\r\n      // Đặt thời gian chờ 1 giây rồi ẩn loading\r\n      setTimeout(() => {\r\n        this.showLoading = false; // Ẩn loading sau 1 giây\r\n      }, 1000);\r\n      this.fetchData(); // Gọi phương thức fetchData để lấy dữ liệu\r\n    },\r\n\r\n    // Lấy dữ liệu từ API\r\n    fetchData() {\r\n      // Gọi API để lấy dữ liệu khách hàng\r\n      fetch(\"https://cukcuk.manhnv.net/api/v1/customers\")\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          this.customers = data;\r\n          console.log(\"Lấy dữ liệu thành công\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Lấy dữ liệu thất bại\");\r\n          console.error(error);\r\n        });\r\n    },\r\n    // Đóng form và thông báo Cất thành công\r\n    handleSaveSuccess() {\r\n      this.fetchData();\r\n      // Thực hiện đóng form\r\n      this.onCloseEmployeeDetail(); // Gọi phương thức để đóng form\r\n      // Hiển thị thông báo thành công\r\n      this.contentNotify = this.$MISAResource[\"VN\"].FormEdited; // Nội dung thông báo thành công\r\n      this.titleNotify = this.$MISAEnum[\"MISANotify\"].Success.title; // Tiêu đề thông báo thành công\r\n      this.iconNotify = this.$MISAEnum.MISANotify.Success.id; // ID của biểu tượng thông báo thành công\r\n      this.showNotify = true; // Hiển thị thông báo\r\n      setTimeout(() => {\r\n        this.showNotify = false; // Tự động ẩn thông báo sau 3 giây\r\n      }, 3000);\r\n    },\r\n    //\r\n    /**\r\n     * Xử lý sự kiện khi một mục menu ngữ cảnh được nhấp vào.\r\n     * @param {number} CustomerId - ID của khách hàng.\r\n     * @param {number} index - Chỉ số của mục menu được nhấp vào.\r\n     *  Created by Lê Trường Lam ngày 5/9\r\n     */\r\n    onContextMenuItemClick(CustomerId, index) {\r\n      const selectedMenuItem = this.customItems2[index];\r\n      if (selectedMenuItem === \"Xóa\") {\r\n        this.pickId(CustomerId);\r\n      } else {\r\n        console.log(selectedMenuItem);\r\n      }\r\n    },\r\n    /**\r\n     * Chọn nhân viên cần xóa dựa trên mã ID.\r\n     * @param {string} CustomerId - Mã ID của khách hàng.\r\n     *  Created by Lê Trường Lam ngày 5/9\r\n     */\r\n    pickId(CustomerId) {\r\n      const customer = this.customers.find(\r\n        (customer) => customer.CustomerId === CustomerId\r\n      );\r\n      if (customer) {\r\n        this.deleteData(CustomerId);\r\n        this.contentNotify = \"Đã xóa thành công\"; // Nội dung thông báo xóa thành công\r\n        this.titleNotify = this.$MISAEnum[\"MISANotify\"].Success.title; // Tiêu đề thông báo thành công\r\n        this.iconNotify = this.$MISAEnum[\"MISANotify\"].Success.id; // ID của biểu tượng thông báo thành công\r\n        this.showNotify = true; // Hiển thị thông báo\r\n        setTimeout(() => {\r\n          this.showNotify = false;\r\n        }, 3000);\r\n      } else {\r\n        console.log(\"Không tìm thấy khách hàng với ID:\", CustomerId);\r\n      }\r\n    },\r\n    /**\r\n     * Xóa dữ liệu từ Id đã chọn\r\n     * @param {string} CustomerId - Mã ID của khách hàng.\r\n     *  Created by Lê Trường Lam ngày 5/9\r\n     */\r\n    \r\n    deleteData(CustomerId) {\r\n      this.$axios\r\n        .delete(`https://cukcuk.manhnv.net/api/v1/customers/${CustomerId}`)\r\n        .then((res) => {\r\n          console.log(\"OK: \", res);\r\n          this.fetchData(); // Thực hiện gọi fetchData để lấy dữ liệu\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Lỗi khi xóa khách hàng:\", error);\r\n        });\r\n    },\r\n    // Mở form nhân viên\r\n    onShowEmployeeDetail() {\r\n      this.showEmployeeDetail = true;\r\n    },\r\n    // Đóng thông tin nhân viên\r\n\r\n    onCloseEmployeeDetail() {\r\n      this.showEmployeeDetail = false;\r\n    },\r\n    /**\r\n     * Chuyển đổi trạng thái hiển thị của combobox cho một mục tableData cụ thể.\r\n     * @param {number} CustomerId - Id của mục tableData.\r\n     */\r\n    toggleCombobox(CustomerId) {\r\n      // Lặp qua từng phần tử trong mảng customers\r\n      this.customers.forEach((customer) => {\r\n        // Nếu Id của customer trùng với CustomerId đầu vào\r\n        if (customer.CustomerId === CustomerId) {\r\n          // Đảo ngược trạng thái showCombobox của customer\r\n          customer.showCombobox = !customer.showCombobox;\r\n        } else {\r\n          // Nếu không, đặt trạng thái showCombobox của customer thành false\r\n          customer.showCombobox = false;\r\n        }\r\n      });\r\n    },\r\n    // Hàm định dạng ngày tháng\r\n    formatDate(date) {\r\n      try {\r\n        // Chuyển đổi đối tượng date thành một đối tượng Date\r\n        date = new Date(date);\r\n        // Lấy giá trị ngày\r\n        let dateValue = date.getDate();\r\n        // Lấy giá trị tháng (cộng thêm 1 vì tháng trong JavaScript bắt đầu từ 0)\r\n        let monthValue = date.getMonth() + 1;\r\n        // Lấy giá trị năm\r\n        let year = date.getFullYear();\r\n        // Trả về chuỗi định dạng ngày/tháng/năm\r\n        return `${dateValue}/${monthValue}/${year}`;\r\n      } catch (error) {\r\n        // Xử lý lỗi nếu có\r\n        console.error(error);\r\n        // Trả về chuỗi rỗng nếu xảy ra lỗi\r\n        return \"\";\r\n      }\r\n    },\r\n    // Hiện Combobox\r\n    onShowCombobox() {\r\n      this.showCombobox = true;\r\n    },\r\n    // Đóng Combobox\r\n    onCloseCombobox() {\r\n      this.showCombobox = false;\r\n    },\r\n    // Hiện Contextmenu\r\n\r\n    onShowContextmenu() {\r\n      this.showContextMenu = true;\r\n    },\r\n    // Đóng Contextmenu\r\n\r\n    onCloseContextmenu() {\r\n      this.showContextMenu = false;\r\n    },\r\n    // Chọn hết checkbox trong bảng\r\n    selectAlltableDatas() {\r\n      if (this.allSelected) {\r\n        this.selectedtableDatas = this.customers.map(\r\n          (customer) => customer.CustomerId\r\n        );\r\n      } else {\r\n        this.selectedtableDatas = [];\r\n      }\r\n    },\r\n    // Cập nhật số checkbox đã chọn\r\n    updateSelectedCount() {\r\n      if (\r\n        this.allSelected &&\r\n        this.selectedtableDatas.length !== this.customers.length\r\n      ) {\r\n        this.allSelected = false;\r\n      }\r\n      if (this.selectedtableDatas.length > 0) {\r\n        this.showSelected = true;\r\n      } else {\r\n        this.showSelected = false;\r\n      }\r\n    },\r\n\r\n    // Xóa tất cả\r\n    deleteAll() {\r\n      // Đặt lại selectedtableDatas về mảng rỗng\r\n      this.selectedtableDatas = [];\r\n      this.allSelected = false;\r\n    },\r\n    // Chọn tất cả\r\n    selectAll() {\r\n      this.allSelected = true;\r\n      // Đặt giá trị selectedtableDatas thành danh sách các id của tất cả các mục trong tableDatas\r\n      this.selectedtableDatas = this.customers.map(\r\n        (customer) => customer.CustomerId\r\n      );\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      showLoading: false,\r\n      showNotify: false,\r\n      showCombobox: false,\r\n      showDialog: false,\r\n      showContextMenu: false,\r\n      showSelected: false,\r\n      customItems: [10, 20, 30, 40, 50], // Mảng của combobox\r\n      customItems2: [\"Nhân bản\", \"Xóa\", \"Ngừng sử dụng\"], // Mảng contextmenu\r\n      allSelected: false,\r\n      selectedtableDatas: [],\r\n      customers: [],\r\n      showEmployeeDetail: false,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.first-left-content {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.delete-row {\r\n  text-decoration: none;\r\n  display: flex;\r\n  flex-direction: center;\r\n  align-items: center;\r\n  height: 36px;\r\n  background-color: #eeeeee;\r\n  padding: 0 12px;\r\n  margin-left: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #e0e0e0;\r\n  width: max-content;\r\n}\r\n.delete-row > p:first-child {\r\n  margin-right: 8px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}