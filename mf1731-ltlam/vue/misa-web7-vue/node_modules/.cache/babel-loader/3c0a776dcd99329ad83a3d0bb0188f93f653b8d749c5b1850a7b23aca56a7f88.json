{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"contextmenu-wrapper\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"contextmenu\\\">\\r\\n    <div class=\\\"contextmenu-wrapper\\\">\\r\\n      <a v-for=\\\"item in menuItems\\\" @click=\\\"closeContextMenu\\\" :key=\\\"item\\\">{{ item }}</a>\\r\\n    </div>\\r\\n  </div> \"), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"div\", {\n    class: \"contextmenu\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeContextmenu && $options.closeContextmenu(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.menuItems, item => {\n    return _openBlock(), _createElementBlock(\"a\", {\n      key: item,\n      onClick: $event => $options.handleMenuItemClick(item)\n    }, _toDisplayString(item), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */), [[_vShow, $data.isContextMenuOpen]])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createCommentVNode","_createElementVNode","onClick","_cache","args","$options","closeContextmenu","_hoisted_1","_createElementBlock","_Fragment","_renderList","$data","menuItems","item","key","$event","handleMenuItemClick","_hoisted_2","isContextMenuOpen"],"sources":["C:\\Users\\Acer\\Documents\\Misa\\tuan 1\\web202307\\mf1731-ltlam\\vue\\misa-web7-vue\\src\\components\\base\\MisaContextmenu.vue"],"sourcesContent":["<template>\r\n  <!-- <div class=\"contextmenu\">\r\n    <div class=\"contextmenu-wrapper\">\r\n      <a v-for=\"item in menuItems\" @click=\"closeContextMenu\" :key=\"item\">{{ item }}</a>\r\n    </div>\r\n  </div> -->\r\n  <div>\r\n    <div\r\n      class=\"contextmenu\"\r\n      v-show=\"isContextMenuOpen\"\r\n      @click=\"closeContextmenu\"\r\n    >\r\n      <div class=\"contextmenu-wrapper\">\r\n        <a\r\n          v-for=\"item in menuItems\"\r\n          :key=\"item\"\r\n          @click=\"handleMenuItemClick(item)\"\r\n          >{{ item }}</a\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MisaContextMenu\",\r\n  props: {\r\n    // menuItems: {\r\n    //   type: Array,\r\n    //   required: true,\r\n    // },\r\n  },\r\n  methods: {\r\n    // closeContextMenu() {\r\n    //   this.$emit(\"onClose\");\r\n    // },\r\n    openContextmenu(event) {\r\n      event.preventDefault();\r\n      this.isContextMenuOpen = true;\r\n    },\r\n    closeContextmenu() {\r\n      this.isContextMenuOpen = false;\r\n    },\r\n    handleMenuItemClick(item) {\r\n      // Xử lý khi mục menu được click\r\n      console.log(\"Clicked:\", item);\r\n      // Thêm các xử lý khác tại đây\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isContextMenuOpen: false,\r\n      menuItems: [\"Item 1\", \"Item 2\", \"Item 3\"], // Các mục menu của bạn ở đây\r\n    };\r\n  },\r\n};\r\n</script>\r\n<style scoped></style>\r\n"],"mappings":";;EAYWA,KAAK,EAAC;AAAqB;;;6DAXpCC,mBAAA,uMAIU,EACVC,mBAAA,CAeM,c,gBAdJA,mBAAA,CAaM;IAZJF,KAAK,EAAC,aAAa;IAElBG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;MAExBH,mBAAA,CAOM,OAPNM,UAOM,I,kBANJC,mBAAA,CAKCC,SAAA,QAAAC,WAAA,CAJgBC,KAAA,CAAAC,SAAS,EAAjBC,IAAI;yBADbL,mBAAA,CAKC;MAHEM,GAAG,EAAED,IAAI;MACTX,OAAK,EAAAa,MAAA,IAAEV,QAAA,CAAAW,mBAAmB,CAACH,IAAI;wBAC5BA,IAAI,wBAAAI,UAAA;sEARJN,KAAA,CAAAO,iBAAiB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}