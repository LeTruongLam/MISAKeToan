{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"contextmenu-wrapper\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"contextmenu\\\">\\r\\n    <div class=\\\"contextmenu-wrapper\\\">\\r\\n      <a v-for=\\\"item in menuItems\\\" @click=\\\"closeContextMenu\\\" :key=\\\"item\\\">{{ item }}</a>\\r\\n    </div>\\r\\n  </div> \"), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"div\", {\n    class: \"contextmenu\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.closeContextmenu && _ctx.closeContextmenu(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.menuItems, item => {\n    return _openBlock(), _createElementBlock(\"a\", {\n      key: item,\n      onClick: $event => _ctx.handleMenuItemClick(item)\n    }, _toDisplayString(item), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */), [[_vShow, _ctx.isContextMenuOpen]]), _createElementVNode(\"button\", {\n    onContextmenu: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.openContextmenu && _ctx.openContextmenu(...args), [\"prevent\"]))\n  }, \"Right-click me\", 32 /* HYDRATE_EVENTS */)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createCommentVNode","_createElementVNode","onClick","_cache","args","_ctx","closeContextmenu","_hoisted_1","_createElementBlock","_Fragment","_renderList","$props","menuItems","item","key","$event","handleMenuItemClick","_hoisted_2","isContextMenuOpen","onContextmenu","_withModifiers","openContextmenu"],"sources":["C:\\Users\\Acer\\Documents\\Misa\\tuan 1\\web202307\\mf1731-ltlam\\vue\\misa-web7-vue\\src\\components\\base\\MisaContextmenu.vue"],"sourcesContent":["<template>\r\n  <!-- <div class=\"contextmenu\">\r\n    <div class=\"contextmenu-wrapper\">\r\n      <a v-for=\"item in menuItems\" @click=\"closeContextMenu\" :key=\"item\">{{ item }}</a>\r\n    </div>\r\n  </div> -->\r\n   <div>\r\n    <div class=\"contextmenu\" v-show=\"isContextMenuOpen\" @click=\"closeContextmenu\">\r\n      <div class=\"contextmenu-wrapper\">\r\n        <a v-for=\"item in menuItems\" :key=\"item\" @click=\"handleMenuItemClick(item)\">{{ item }}</a>\r\n      </div>\r\n    </div>\r\n    <button @contextmenu.prevent=\"openContextmenu\">Right-click me</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MisaContextMenu\",\r\n  props: {\r\n    menuItems: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  methods:{\r\n    closeContextMenu(){\r\n        this.$emit(\"onClose\");\r\n    }\r\n  }\r\n  ,\r\n  data() {\r\n    return {};\r\n  },\r\n};\r\n</script>\r\n<style scoped></style>\r\n"],"mappings":";;EAQWA,KAAK,EAAC;AAAqB;;;6DAPpCC,mBAAA,uMAIU,EACTC,mBAAA,CAOK,c,gBANJA,mBAAA,CAIM;IAJDF,KAAK,EAAC,aAAa;IAA6BG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,gBAAA,IAAAD,IAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;MAC1EH,mBAAA,CAEM,OAFNM,UAEM,I,kBADJC,mBAAA,CAA0FC,SAAA,QAAAC,WAAA,CAAxEC,MAAA,CAAAC,SAAS,EAAjBC,IAAI;yBAAdL,mBAAA,CAA0F;MAA5DM,GAAG,EAAED,IAAI;MAAGX,OAAK,EAAAa,MAAA,IAAEV,IAAA,CAAAW,mBAAmB,CAACH,IAAI;wBAAMA,IAAI,wBAAAI,UAAA;sEAFtDZ,IAAA,CAAAa,iBAAiB,E,GAKlDjB,mBAAA,CAAsE;IAA7DkB,aAAW,EAAAhB,MAAA,QAAAA,MAAA,MAAAiB,cAAA,KAAAhB,IAAA,KAAUC,IAAA,CAAAgB,eAAA,IAAAhB,IAAA,CAAAgB,eAAA,IAAAjB,IAAA,CAAe;KAAE,gBAAc,2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}