{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"label\", null, _toDisplayString(_ctx.$event.target.value), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputValue = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.inputValue]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","_ctx","$event","target","value","$data","inputValue","type"],"sources":["C:\\Users\\Acer\\Documents\\Misa\\tuan 1\\web202307\\mf1731-ltlam\\vue\\misa-web7-vue\\src\\components\\base\\MisaInput.vue"],"sourcesContent":["<template>\r\n  <label>{{ $event.target.value }}</label>\r\n  <input v-model=\"inputValue\" type=\"text\" />\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"MisaInput\",\r\n  props: [\"value\"],\r\n  watch: {\r\n    value() {\r\n      this.emitValueChanged();\r\n    },\r\n  },\r\n  methods: {\r\n    emitValueChanged() {\r\n      this.$emit(\"input-value-changed\", this.value);\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      inputValue:\"\"\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";;6DACEA,mBAAA,CAAwC,eAAAC,gBAAA,CAA9BC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,KAAK,kB,gBAC7BL,mBAAA,CAA0C;+DAA1BM,KAAA,CAAAC,UAAU,GAAAJ,MAAA;IAAEK,IAAI,EAAC;iDAAjBF,KAAA,CAAAC,UAAU,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}